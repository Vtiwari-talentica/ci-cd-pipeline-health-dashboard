#!/bin/bash

# Jenkins Job Setup Script
# Creates a Jenkins pipeline job that sends data to your CI/CD dashboard

JENKINS_URL="http://localhost:8080"
JOB_NAME="ci-dashboard-test"

echo "üîß Setting up Jenkins job for CI/CD Dashboard testing"
echo "=============================================="
echo ""

# Check if Jenkins is accessible
echo "üì° Checking Jenkins connectivity..."
HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "$JENKINS_URL")

if [ "$HTTP_CODE" -eq 200 ] || [ "$HTTP_CODE" -eq 403 ]; then
    echo "‚úÖ Jenkins is accessible at $JENKINS_URL"
else
    echo "‚ùå Jenkins is not accessible. Please ensure Jenkins is running on port 8080"
    echo "   Start Jenkins with: brew services start jenkins"
    echo "   Or check if it's running on a different port"
    exit 1
fi

echo ""
echo "üéØ Next Steps to Complete Setup:"
echo ""

echo "1. üìÇ Create a New Pipeline Job:"
echo "   ‚Ä¢ Open Jenkins: $JENKINS_URL"
echo "   ‚Ä¢ Click 'New Item'"
echo "   ‚Ä¢ Enter name: '$JOB_NAME'"
echo "   ‚Ä¢ Select 'Pipeline' and click OK"
echo ""

echo "2. ‚öôÔ∏è  Configure the Pipeline:"
echo "   ‚Ä¢ In the job configuration page:"
echo "   ‚Ä¢ Scroll to 'Pipeline' section"
echo "   ‚Ä¢ Select 'Pipeline script from SCM'"
echo "   ‚Ä¢ SCM: Git"
echo "   ‚Ä¢ Repository URL: https://github.com/Vtiwari-talentica/ci-cd-pipeline-health-dashboard.git"
echo "   ‚Ä¢ Script Path: Jenkinsfile"
echo "   ‚Ä¢ Click 'Save'"
echo ""

echo "3. üöÄ Alternative - Direct Pipeline Script:"
echo "   ‚Ä¢ Instead of SCM, select 'Pipeline script'"
echo "   ‚Ä¢ Copy the contents of ./Jenkinsfile into the script box"
echo "   ‚Ä¢ Click 'Save'"
echo ""

echo "4. ‚ñ∂Ô∏è  Run the Job:"
echo "   ‚Ä¢ Click 'Build Now'"
echo "   ‚Ä¢ Watch the console output"
echo "   ‚Ä¢ Check your dashboard at: http://localhost:5173"
echo ""

echo "5. üîÑ For Continuous Testing:"
echo "   ‚Ä¢ Go to job configuration"
echo "   ‚Ä¢ Check 'Build periodically'"
echo "   ‚Ä¢ Schedule: '*/2 * * * *' (every 2 minutes)"
echo "   ‚Ä¢ Save"
echo ""

echo "üìä Expected Results:"
echo "   ‚Ä¢ Jenkins job will execute the pipeline"
echo "   ‚Ä¢ Webhook will be sent to your dashboard"
echo "   ‚Ä¢ Real-time updates will appear in the dashboard"
echo "   ‚Ä¢ Build metrics will be calculated and displayed"
echo ""

echo "üîó Useful URLs:"
echo "   ‚Ä¢ Jenkins: $JENKINS_URL"
echo "   ‚Ä¢ Dashboard: http://localhost:5173"
echo "   ‚Ä¢ Dashboard API: http://localhost:8001/docs"
echo "   ‚Ä¢ Webhook endpoint: http://localhost:8001/webhook/jenkins"
echo ""

echo "‚ö†Ô∏è  Troubleshooting:"
echo "   ‚Ä¢ If webhook fails, check that your dashboard containers are running:"
echo "     docker-compose ps"
echo "   ‚Ä¢ Verify the webhook URL in Jenkinsfile matches your setup"
echo "   ‚Ä¢ Check Jenkins logs for detailed error messages"
echo ""

echo "üéâ Ready to test! Create the job in Jenkins and run it to see live data in your dashboard!"
